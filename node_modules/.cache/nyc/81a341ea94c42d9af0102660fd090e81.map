{"version":3,"sources":["questionsModels.js"],"names":["Question","questions","votes","data","theMeetup","meetupModel","getOne","meetupId","theUser","userModel","findUser","userId","theQuestion","questionId","uuid","v4","createdOn","moment","now","createdBy","firstName","lastName","title","body","upvote","downvote","push","filter","question","forDel","index","indexOf","splice","find","userExist","user","userExistQuestion","type","guy","vote"],"mappings":"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","file":"questionsModels.js","sourceRoot":"C:/Users/HP/Desktop/theBootcamp/v1/models","sourcesContent":["import moment from 'moment';\r\nimport uuid from 'uuid';\r\nimport meetupModel from './meetupsModels';\r\nimport userModel from './usersModels';\r\n\r\n\r\nclass Question {\r\n  constructor() {\r\n    this.questions = [];\r\n    this.votes = [];\r\n  }\r\n\r\n  askQuestion(data) {\r\n    const theMeetup = meetupModel.getOne(data.meetupId);\r\n    const theUser = userModel.findUser(data.userId);\r\n    const theQuestion = {\r\n      questionId: uuid.v4(),\r\n      createdOn: moment.now(),\r\n      createdBy: `${theUser.firstName} ${theUser.lastName}`,\r\n      userId: theUser.userId,\r\n      meetupId: theMeetup.meetupId,\r\n      title: data.title,\r\n      body: data.body,\r\n      upvote: data.upvote,\r\n      downvote: data.downvote,\r\n    };\r\n    this.questions.push(theQuestion);\r\n    return theQuestion;\r\n  }\r\n\r\n  // get all questions related to the meetup\r\n  getMeetupQuestions(meetupId) {\r\n    return this.questions.filter(question => question.meetupId === meetupId);\r\n  }\r\n\r\n  // get all questions this users has answered\r\n  getUserQuestions(userId) {\r\n    return this.questions.filter(questions => questions.userId === userId);\r\n  }\r\n\r\n  // delete a question formely asked\r\n  delete(questionId) {\r\n    const theQuestion = this.forDel(questionId);\r\n    const index = this.questions.indexOf(theQuestion);\r\n    this.questions.splice(index, 1);\r\n    return this.questions;\r\n  }\r\n\r\n  forDel(questionId) {\r\n    return this.questions.find(question => question.questionId === questionId);\r\n  }\r\n\r\n  requestUpvote(data) {\r\n    // does the question exist\r\n    const theQuestion = this.forDel(data.questionId);\r\n    // does the user exist\r\n    const theUser = userModel.findUser(data.userId);\r\n    // does the meetup exist\r\n    const theMeetup = meetupModel.getOne(data.meetupId);\r\n    const userExist = this.votes.filter(user => user.userId === data.userId);\r\n    // const meetupExist = this.votes.filter(meetup => meetup.meetupId === data.meetupId);\r\n    // const questionExist = this.votes.filter(question => question.questionId === data.questionId);\r\n\r\n    const userExistQuestion = userExist.find(question => question.questionId === data.questionId);\r\n\r\n    if (theQuestion && theMeetup && theUser) {\r\n      /* Check if the user/meetup/question exist in the votes array */\r\n\r\n      if (userExist) {\r\n        // if there is a user in the votes array with this userId then...\r\n        // has he interacted with this question?\r\n        if (userExistQuestion.type === 'upvote' && (userExistQuestion.meetupId === data.meetupId)) {\r\n          // does the user exist in the user array of usersModels and has already upvoted ?\r\n          return;\r\n        }\r\n        if (userExistQuestion.type === 'downvote' && (userExistQuestion.meetupId === data.meetupId)) {\r\n          theQuestion.downvote -= 1;\r\n          theQuestion.upvote += 1;\r\n        }\r\n      }\r\n      // User exists in reallife but has not voted this question\r\n      const guy = {\r\n        userId: data.userId,\r\n        questionId: data.questionId,\r\n        meetupId: data.meetupId,\r\n        type: 'upvote',\r\n      };\r\n      this.votes.push(guy);\r\n      theQuestion.upvote += 1;\r\n    }\r\n  }\r\n\r\n  requestDownvote(data) {\r\n    // does the question exist\r\n    const theQuestion = this.forDel(data.questionId);\r\n    // does the user exist\r\n    const theUser = userModel.findUser(data.userId);\r\n    // does the meetup exist\r\n    const theMeetup = meetupModel.getOne(data.meetupId);\r\n\r\n    const userExist = this.votes.filter(user => user.userId === data.userId);\r\n    // const meetupExist = this.votes.filter(meetup => meetup.meetupId === data.meetupId);\r\n    // const questionExist = this.votes.filter(question => question.questionId === data.questionId);\r\n    const userExistQuestion = userExist.find(question => question.questionId === data.questionId);\r\n\r\n\r\n    if (theQuestion && theMeetup && theUser) {\r\n      /* Check if the user/meetup/question exist in the votes array */\r\n\r\n      if (userExist) {\r\n        // if there is a user in the votes array with this userId then...\r\n        // has he userExist(found to exist) interacted with this question?\r\n\r\n        if (userExistQuestion.type === 'downvote' && (userExistQuestion.meetupId === data.meetupId)) {\r\n          // does the user exist in the user array of usersModels and has already upvoted ?\r\n          return;\r\n        }\r\n        if (userExistQuestion.vote === 'upvote' && (userExistQuestion.meetupId === data.meetupId)) {\r\n          theQuestion.upvote -= 1;\r\n          theQuestion.downvote += 1;\r\n        }\r\n      }\r\n      // User exists in reallife but has not voted this question\r\n      const guy = {\r\n        userId: data.userId,\r\n        questionId: data.questionId,\r\n        meetupId: data.meetupId,\r\n        type: 'upvote',\r\n      };\r\n      this.votes.push(guy);\r\n      theQuestion.downvote += 1;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new Question();"]}