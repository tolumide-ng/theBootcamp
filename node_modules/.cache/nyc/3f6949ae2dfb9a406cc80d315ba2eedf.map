{"version":3,"sources":["meetupsControllers.js"],"names":["Meetups","createMeetup","req","res","data","body","dateHappening","Date","happeningOn","topic","location","tags","status","json","message","createdMeetup","meetupModel","create","createdOn","rsvp","params","getOne","meetupId","userId","usersModel","findUser","attend","meetup","response","findOne","theMeetup","findAll","allMeetups","getAll","length","map","allUpcomings","upcomingMeetups","upcomings","count","upcomingMeetup","deleteMeetup","confirm","delete","edit","findAttending","meetupExist","attending","find","people","title"],"mappings":"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","file":"meetupsControllers.js","sourceRoot":"C:/Users/HP/Desktop/theBootcamp/v1/controllers","sourcesContent":["import meetupModel from '../models/meetupsModels';\nimport usersModel from '../models/usersModels';\n\nconst Meetups = {\n  createMeetup(req, res) {\n    // all parameters are required\n    const data = req.body;\n    const dateHappening = (new Date(data.happeningOn) > new Date());\n    if (!data.topic && !data.location && !data.tags\n            && !data.happeningOn && !dateHappening) {\n      return res.status(422).json({\n        message: 'All fields are required',\n      });\n    }\n    const createdMeetup = meetupModel.create(data);\n    return res.status(201).json({\n      topic: createdMeetup.topic,\n      location: createdMeetup.location,\n      happeningOn: createdMeetup.happeningOn,\n      tags: createdMeetup.tags,\n      createdOn: createdMeetup.createdOn,\n    });\n  },\n\n  rsvp(req, res) {\n    const params = meetupModel.getOne(req.params.meetupId);\n    const data = req.body;\n    const userId = usersModel.findUser(data.userId);\n    const status = 'yes' || 'no' || 'maybe';\n    if (params && userId && status) {\n      const attend = meetupModel.attend(data);\n      attend;\n      res.status(201).json({\n        status: 201,\n        data: [{\n          meetup: attend.meetupId,\n          topic: attend.topic,\n          status: attend.response,\n        }],\n      });\n    }\n    res.status(422).json({\n      message: 'Unprocessable Entity: Confirm the supplied information',\n    });\n  },\n\n  findOne(req, res) {\n    const params = req.params.meetupId;\n    const theMeetup = meetupModel.getOne(params);\n    if (!theMeetup) {\n      return res.status(404).json({\n        message: 'Meetup Not Found',\n      });\n    }\n    return res.status(200).json({\n      meetup: theMeetup.meetupId,\n      createdOn: theMeetup.createdOn,\n      topic: theMeetup.topic,\n      location: theMeetup.location,\n      happeningOn: theMeetup.happeningOn,\n      tags: theMeetup.tags,\n    });\n  },\n\n  findAll(req, res) {\n    const allMeetups = meetupModel.getAll();\n    if (allMeetups.length) {\n      res.status(200).json({\n        Meetups: allMeetups.length,\n        data: allMeetups.map(meetup => ({\n          meetup: meetup.meetupId,\n          topic: meetup.topic,\n          location: meetup.location,\n          happeningOn: meetup.happeningOn,\n          tags: meetup.tags,\n        })),\n      });\n    }\n    return res.status(404).json({\n      message: 'Meetups not found',\n    });\n  },\n\n  allUpcomings(req, res) {\n    const upcomingMeetups = meetupModel.upcomings();\n    if (upcomingMeetups.length) {\n      return res.status(200).json({\n        count: upcomingMeetups.length,\n        data: upcomingMeetups.map(upcomingMeetup => ({\n          meetupId: upcomingMeetup.meetupId,\n          topic: upcomingMeetup.topic,\n          location: upcomingMeetup.location,\n          happeningOn: upcomingMeetup.happeningOn,\n          tags: upcomingMeetup.tags,\n        })),\n      });\n    }\n    return res.status(404).json({\n      message: 'No meetups found',\n    });\n  },\n\n  deleteMeetup(req, res) {\n    // Is this a real meetup?\n    const confirm = meetupModel.getOne(req.body.meetupId);\n    if (confirm) {\n      meetupModel.delete(req.body.meetupId);\n      res.status(200).json({\n        message: 'Deleted',\n      });\n    }\n    return res.status(404).json({\n      message: 'Meetup Not Found',\n    });\n  },\n\n  edit(res, req) {\n    const confirm = meetupModel.getOne(req.body.meetupId);\n    if (!confirm) {\n      return res.status(404).json({\n        message: 'Meetup not found',\n      });\n    }\n    meetupModel.edit(req.body);\n    return res.status(200).json({\n      message: 'Update Succesful',\n    });\n  },\n\n  findAttending(req, res) {\n    // confirm if meetup exists in meetups\n    // confirm if meetup exists in attending\n    // return length and userid of attendees\n\n    const meetupExist = meetupModel.getOne(req.params.meetupId);\n    if (meetupExist) {\n      const confirm = meetupModel.attending.find(meetup => meetup.meetupId === req.params.meetupId);\n      if (confirm) {\n        return res.status(200).json({\n          count: confirm.length,\n          data: confirm.map(people => ({\n            meetupId: people.meetupId,\n            userId: people.userId,\n            title: people.title,\n            body: people.body,\n          })),\n        });\n      }\n      return res.status(404).json({\n        message: 'No registered attendants for this meetup',\n      });\n    }\n    return res.status(404).json({\n      message: 'Meetup does not exist',\n    });\n  },\n};\n\nexport default Meetups;\n"]}